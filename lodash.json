{
    "crash1": {
        "crashProject": "lodash",
        "trace": "    at _loop (lodash/.internal/equalArrays.js:50:7)\n    at equalArrays (lodash/.internal/equalArrays.js:43:259)\n    at call (.syntest/tests/tempTest.spec.js:24:69)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n    at .syntest/tests/tempTest.spec.js:2:1\n    at new Promise (<anonymous>)\n    at Context.<anonymous> (.syntest/tests/tempTest.spec.js:2:1)\n    at processImmediate (node:internal/timers:476:21)\n",
        "errors": [
            "TypeError: customizer is not a function",
            "TypeError: equalFunc is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import equalArrays from \"../instrumented/lodash/.internal/equalArrays.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst array = \"[object DOMException]\";",
                "\t\tconst localLength = 4294967295;",
                "\t\tconst other = {",
                "\t\t\t\"length\": localLength",
                "\t\t}",
                "\t\tconst bitmask = -1;",
                "\t\tconst customizer = true;",
                "\t\tconst equalFunc = () => {};",
                "\t\tconst get = () => {};",
                "\t\tconst localSet = () => {};",
                "\t\tconst localDelete = () => {};",
                "\t\tconst stack = {",
                "\t\t\t\"get\": get,",
                "\t\t\t\"set\": localSet,",
                "\t\t\t\"delete\": localDelete",
                "\t\t}",
                "\t\tconst equalArraysReturnValue = await equalArrays(array, other, bitmask, customizer, equalFunc, stack)",
                "\t\tconst array1 = false;",
                "\t\tconst arrayElement = null;",
                "\t\tconst bitmask1 = -1;",
                "\t\tconst localLength1 = 4294967295;",
                "\t\tconst other1 = [arrayElement, bitmask1, localLength1]",
                "\t\tconst bitmask2 = -429.8556726950263;",
                "\t\tconst arrayElement1 = \"./.internal/basePick.js\";",
                "\t\tconst customizer1 = [arrayElement1]",
                "\t\tconst equalFunc1 = () => {};",
                "\t\tconst localLength2 = 4294967295;",
                "\t\tconst other2 = {",
                "\t\t\t\"length\": localLength2",
                "\t\t}",
                "\t\tconst get1 = () => {};",
                "\t\tconst equalArraysReturnValue1 = await equalArrays(array1, other1, bitmask2, customizer1, equalFunc1, other2, get1)",
                "\t\tconst get2 = () => {};",
                "\t\tconst localSet1 = () => {};",
                "\t\tconst localDelete1 = () => {};",
                "\t\tconst stack1 = {",
                "\t\t\t\"get\": get2,",
                "\t\t\t\"set\": localSet1,",
                "\t\t\t\"delete\": localDelete1",
                "\t\t}",
                "\t\tconst arrayElement2 = \"./.internal/basePick.js\";",
                "\t\tconst customizer2 = [arrayElement2]",
                "\t\tconst bitmask3 = -11;",
                "\t\tconst array2 = false;",
                "\t\tconst equalFunc2 = () => {};",
                "\t\tconst localLength3 = 4294967295;",
                "\t\tconst other3 = {",
                "\t\t\t\"length\": localLength3",
                "\t\t}",
                "\t\tconst equalArraysReturnValue2 = await equalArrays(stack1, customizer2, bitmask3, array2, equalFunc2, other3)",
                "\t\t",
                "\t})",
                "})",
                ""
            ],
            [
                "// Imports",
                "require = require('esm')(module)",
                "import equalArrays from \"../instrumented/lodash/.internal/equalArrays.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst arrayElement = false;",
                "\t\tconst arrayElement1 = () => {};",
                "\t\tconst array = [arrayElement, arrayElement1]",
                "\t\tconst other = \"./meanBy.js\";",
                "\t\tconst bitmask = 245.5800159025141;",
                "\t\tconst customizer = false;",
                "\t\tconst equalFunc = null;",
                "\t\tconst get = () => {};",
                "\t\tconst localSet = () => {};",
                "\t\tconst localDelete = () => {};",
                "\t\tconst stack = {",
                "\t\t\t\"get\": get,",
                "\t\t\t\"set\": localSet,",
                "\t\t\t\"delete\": localDelete",
                "\t\t}",
                "\t\tconst equalArraysReturnValue = await equalArrays(array, other, bitmask, customizer, equalFunc, stack)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash2": {
        "crashProject": "lodash",
        "trace": "    at _loop (lodash/.internal/equalArrays.js:50:7)\n    at equalArrays (lodash/.internal/equalArrays.js:43:259)\n    at call (.syntest/tests/tempTest.spec.js:35:32)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n",
        "errors": [
            "TypeError: customizer is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import equalArrays from \"../instrumented/lodash/.internal/equalArrays.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst array = () => {};",
                "\t\tconst arrayElement = \"V<V\\\\>&y_rXD1~+HyM`/#}?±\\\"Z0pY:rY50Vdq|].G<\\\"ZV$:<RE[71kk{R(o_iP±u@6G%Q\\\"QVCuw0Z78ig \";",
                "\t\tconst other = [arrayElement]",
                "\t\tconst bitmask = -260;",
                "\t\tconst customizer = false;",
                "\t\tconst equalFunc = () => {};",
                "\t\tconst get = () => {};",
                "\t\tconst localSet = () => {};",
                "\t\tconst localDelete = \"./.internal/arrayEach.js\";",
                "\t\tconst stack = {",
                "\t\t\t\"get\": get,",
                "\t\t\t\"set\": localSet,",
                "\t\t\t\"delete\": localDelete",
                "\t\t}",
                "\t\tconst equalArraysReturnValue = await equalArrays(array, other, bitmask, customizer, equalFunc, stack)",
                "\t\tconst arrayElement1 = \"V<V\\\\>&y_rXD1~+HyM`/#}?±\\\"Z0pY:rY50Vdq|].G<\\\"ZV$:<RE[71kk{R(o_iP±u@6G%Q\\\"QVCuw0Z78ig \";",
                "\t\tconst other1 = [arrayElement1]",
                "\t\tconst arrayElement2 = \"V<V\\\\>&y_rXD1~+HyM`/#}?±\\\"Z0pY:rY50Vdq|].G<\\\"ZV$:<RE[71kk{R(o_iP±u@6G%Q\\\"QVCuw0Z78ig \";",
                "\t\tconst bitmask1 = -253.76514919857718;",
                "\t\tconst bitmask2 = -260;",
                "\t\tconst arrayElement3 = null;",
                "\t\tconst customizer1 = [bitmask2, arrayElement3]",
                "\t\tconst equalFunc1 = () => {};",
                "\t\tconst get1 = () => {};",
                "\t\tconst localSet1 = () => {};",
                "\t\tconst localDelete1 = \"./.internal/arrayEach.js\";",
                "\t\tconst stack1 = {",
                "\t\t\t\"get\": get1,",
                "\t\t\t\"set\": localSet1,",
                "\t\t\t\"delete\": localDelete1",
                "\t\t}",
                "\t\tconst equalArraysReturnValue1 = await equalArrays(other1, arrayElement2, bitmask1, customizer1, equalFunc1, stack1)",
                "\t\tconst arrayElement4 = \"V<V\\\\>&y_rXD1~+HyM`/#}?±\\\"Z0pY:rY50Vdq|].G<\\\"ZV$:<RE[71kk{R(o_iP±u@6G%Q\\\"QVCuw0Z78ig \";",
                "\t\tconst get2 = () => {};",
                "\t\tconst bitmask3 = 47.47279372479397;",
                "\t\tconst customizer2 = false;",
                "\t\tconst array1 = () => {};",
                "\t\tconst get3 = () => {};",
                "\t\tconst localSet2 = () => {};",
                "\t\tconst localDelete2 = \"./.internal/arrayEach.js\";",
                "\t\tconst stack2 = {",
                "\t\t\t\"get\": get3,",
                "\t\t\t\"set\": localSet2,",
                "\t\t\t\"delete\": localDelete2",
                "\t\t}",
                "\t\tconst equalArraysReturnValue2 = await equalArrays(arrayElement4, get2, bitmask3, customizer2, array1, stack2)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash3": {
        "crashProject": "lodash",
        "trace": "    at predicate (lodash/.internal/equalArrays.js:64:44)\n    at some (lodash/some.js:22:9)\n    at _loop (lodash/.internal/equalArrays.js:62:63)\n    at equalArrays (lodash/.internal/equalArrays.js:43:259)\n    at call (.syntest/tests/tempTest.spec.js:24:16)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n    at .syntest/tests/tempTest.spec.js:2:1\n    at new Promise (<anonymous>)\n    at Context.<anonymous> (.syntest/tests/tempTest.spec.js:2:1)\n    at processImmediate (node:internal/timers:476:21)\n",
        "errors": [
            "TypeError: equalFunc is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import equalArrays from \"../instrumented/lodash/.internal/equalArrays.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst arrayElement = false;",
                "\t\tconst arrayElement1 = () => {};",
                "\t\tconst array = [arrayElement, arrayElement1]",
                "\t\tconst other = \"./.internal/baseMerge.js\";",
                "\t\tconst bitmask = 735.2483902727704;",
                "\t\tconst customizer = false;",
                "\t\tconst equalFunc = null;",
                "\t\tconst get = () => {};",
                "\t\tconst localSet = () => {};",
                "\t\tconst localDelete = () => {};",
                "\t\tconst stack = {",
                "\t\t\t\"get\": get,",
                "\t\t\t\"set\": localSet,",
                "\t\t\t\"delete\": localDelete",
                "\t\t}",
                "\t\tconst equalArraysReturnValue = await equalArrays(array, other, bitmask, customizer, equalFunc, stack)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash4": {
        "crashProject": "lodash",
        "trace": "    at predicate (lodash/.internal/equalArrays.js:64:44)\n    at some (lodash/some.js:22:9)\n    at _loop (lodash/.internal/equalArrays.js:62:63)\n    at sent (lodash/.internal/equalArrays.js:43:259)\n    at call (.syntest/tests/tempTest.spec.js:35:32)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n",
        "errors": [
            "TypeError: equalFunc is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import equalArrays from \"../instrumented/lodash/.internal/equalArrays.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst arrayElement = \"V<V\\\\>&y_rXD1~+HyM`/#}?±\\\"Z0pY:rY50Vdq|].G<\\\"ZV$:<RE[71kk{R(o_iP±u@6G%Q\\\"QVCuw0Z78ig \";",
                "\t\tconst get = () => {};",
                "\t\tconst bitmask = 47.47279372479397;",
                "\t\tconst customizer = false;",
                "\t\tconst array = () => {};",
                "\t\tconst get1 = () => {};",
                "\t\tconst localSet = () => {};",
                "\t\tconst localDelete = \"./.internal/arrayEach.js\";",
                "\t\tconst stack = {",
                "\t\t\t\"get\": get1,",
                "\t\t\t\"set\": localSet,",
                "\t\t\t\"delete\": localDelete",
                "\t\t}",
                "\t\tconst equalArraysReturnValue = await equalArrays(arrayElement, get, bitmask, customizer, array, stack)",
                "\t\tconst arrayElement1 = false;",
                "\t\tconst arrayElement2 = () => {};",
                "\t\tconst array1 = [arrayElement1, arrayElement2]",
                "\t\tconst other = \"./meanBy.js\";",
                "\t\tconst bitmask1 = 247.44891534699167;",
                "\t\tconst arrayElement3 = () => {};",
                "\t\tconst equalFunc = null;",
                "\t\tconst get2 = () => {};",
                "\t\tconst localSet1 = () => {};",
                "\t\tconst localDelete1 = () => {};",
                "\t\tconst stack1 = {",
                "\t\t\t\"get\": get2,",
                "\t\t\t\"set\": localSet1,",
                "\t\t\t\"delete\": localDelete1",
                "\t\t}",
                "\t\tconst equalArraysReturnValue1 = await equalArrays(array1, other, bitmask1, arrayElement3, equalFunc, stack1)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash5": {
        "crashProject": "lodash",
        "trace": "    at apply (lodash/.internal/stringToPath.js:28:14)\n    at memoized (lodash/memoize.js:54:25)\n    at castPath (lodash/.internal/castPath.js:16:55)\n    at hasPath (lodash/hasPath.js:35:99)\n    at call (.syntest/tests/tempTest.spec.js:15:26)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n    at .syntest/tests/tempTest.spec.js:2:1\n    at new Promise (<anonymous>)\n    at Context.<anonymous> (.syntest/tests/tempTest.spec.js:2:1)\n    at processImmediate (node:internal/timers:476:21)\n",
        "errors": [
            "TypeError: string.charCodeAt is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import hasPath from \"../instrumented/lodash/hasPath.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst object = false;",
                "\t\tconst path = {}",
                "\t\tconst arrayElement = undefined;",
                "\t\tconst arrayElement1 = false;",
                "\t\tconst arrayElement2 = {}",
                "\t\tconst anon = [arrayElement, arrayElement1, arrayElement2]",
                "\t\tconst hasPathReturnValue = await hasPath(object, path, anon)",
                "\t\tconst object1 = null;",
                "\t\tconst arrayElement3 = {}",
                "\t\tconst hasPathReturnValue1 = await hasPath(object1, arrayElement3)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash6": {
        "crashProject": "lodash",
        "trace": "    at apply (lodash/.internal/stringToPath.js:28:14)\n    at memoized (lodash/memoize.js:54:25)\n    at castPath (lodash/.internal/castPath.js:16:55)\n    at _context (lodash/hasPath.js:35:99)\n    at call (.syntest/tests/tempTest.spec.js:22:31)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n",
        "errors": [
            "TypeError: string.charCodeAt is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import hasPath from \"../instrumented/lodash/hasPath.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst localLength = 8;",
                "\t\tconst object = {",
                "\t\t\t\"length\": localLength",
                "\t\t}",
                "\t\tconst path = \"~P&~Kk8},Drf'sx;D=2pL`±,{CVDsbPxr<!Q|D(k|mQ4<l dz\\nUA;i0C/*OPhirG5l?8q(*W]D{Q/# \";",
                "\t\tconst anon = \"./.internal/baseSortedIndexBy.js\";",
                "\t\tconst hasPathReturnValue = await hasPath(object, path, anon)",
                "\t\tconst object1 = null;",
                "\t\tconst localLength1 = 8;",
                "\t\tconst object2 = {",
                "\t\t\t\"length\": localLength1",
                "\t\t}",
                "\t\tconst anon1 = \"./.internal/baseSortedIndexBy.js\";",
                "\t\tconst hasPathReturnValue1 = await hasPath(object1, object2, anon1)",
                "\t\tconst localLength2 = 8;",
                "\t\tconst object3 = {",
                "\t\t\t\"length\": localLength2",
                "\t\t}",
                "\t\tconst anon2 = \"./.internal/baseSortedIndexBy.js\";",
                "\t\tconst path1 = \"~P&~Kk8},Drf'sx;D=2pL`±,{CVDsbPxr<!Q|D(k|mQ4<l dz\\nUA;i0C/*OPhirG5l?8q(*W]D{Q/# \";",
                "\t\tconst hasPathReturnValue2 = await hasPath(object3, anon2, path1)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash7": {
        "crashProject": "lodash",
        "trace": "    at iteratee (lodash/transform.js:55:60)\n    at baseFor (lodash/.internal/baseFor.js:20:9)\n    at baseForOwn (lodash/.internal/baseForOwn.js:13:27)\n    at transform (lodash/transform.js:54:264)\n    at call (.syntest/tests/tempTest.spec.js:24:4)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n",
        "errors": [
            "TypeError: iteratee is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import transform from \"../instrumented/lodash/transform.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst localConstructor = true;",
                "\t\tconst object = {",
                "\t\t\t\"constructor\": localConstructor",
                "\t\t}",
                "\t\tconst iteratee = () => {};",
                "\t\tconst localConstructor1 = true;",
                "\t\tconst accumulator = {",
                "\t\t\t\"constructor\": localConstructor1",
                "\t\t}",
                "\t\tconst anon = \"/=\";",
                "\t\tconst anon1 = {}",
                "\t\tconst transformReturnValue = await transform(object, iteratee, accumulator, anon, anon1)",
                "\t\tconst object1 = undefined;",
                "\t\tconst iteratee1 = () => {};",
                "\t\tconst accumulator1 = null;",
                "\t\tconst transformReturnValue1 = await transform(object1, iteratee1, accumulator1)",
                "\t\tconst localConstructor2 = true;",
                "\t\tconst object2 = {",
                "\t\t\t\"constructor\": localConstructor2",
                "\t\t}",
                "\t\tconst accumulator2 = null;",
                "\t\tconst accumulator3 = {}",
                "\t\tconst transformReturnValue2 = await transform(object2, accumulator2, accumulator3)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash8": {
        "crashProject": "lodash",
        "trace": "    at iteratee (lodash/transform.js:55:60)\n    at baseFor (lodash/.internal/baseFor.js:20:9)\n    at baseForOwn (lodash/.internal/baseForOwn.js:13:27)\n    at transform (lodash/transform.js:54:264)\n    at call (.syntest/tests/tempTest.spec.js:18:60)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n    at .syntest/tests/tempTest.spec.js:2:1\n    at new Promise (<anonymous>)\n    at Context.<anonymous> (.syntest/tests/tempTest.spec.js:2:1)\n    at processImmediate (node:internal/timers:476:21)\n",
        "errors": [
            "TypeError: iteratee is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import transform from \"../instrumented/lodash/transform.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst localConstructor = true;",
                "\t\tconst localConstructor1 = {",
                "\t\t\t\"constructor\": localConstructor",
                "\t\t}",
                "\t\tconst object = {",
                "\t\t\t\"constructor\": localConstructor1",
                "\t\t}",
                "\t\tconst iteratee = null;",
                "\t\tconst localConstructor2 = true;",
                "\t\tconst accumulator = {",
                "\t\t\t\"constructor\": localConstructor2",
                "\t\t}",
                "\t\tconst anon = undefined;",
                "\t\tconst anon1 = () => {};",
                "\t\tconst transformReturnValue = await transform(object, iteratee, accumulator, anon, anon1)",
                "\t\tconst localConstructor3 = true;",
                "\t\tconst iteratee1 = () => {};",
                "\t\tconst accumulator1 = null;",
                "\t\tconst transformReturnValue1 = await transform(localConstructor3, iteratee1, accumulator1)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash9": {
        "crashProject": "lodash",
        "trace": "    at iteratee (lodash/transform.js:55:60)\n    at arrayEach (lodash/.internal/arrayEach.js:14:9)\n    at transform (lodash/transform.js:54:264)\n    at call (.syntest/tests/tempTest.spec.js:11:63)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n    at .syntest/tests/tempTest.spec.js:2:1\n    at new Promise (<anonymous>)\n    at Context.<anonymous> (.syntest/tests/tempTest.spec.js:2:1)\n    at processImmediate (node:internal/timers:476:21)\n",
        "errors": [
            "TypeError: iteratee is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import transform from \"../instrumented/lodash/transform.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst arrayElement = \"e/<~of.R9v^h=g#A8k±hD@S±BL9!RTCnc#f*pGiLD@1Y VV!rHFy:;Aqx%@x5W$No\\\"&w}f/\\nxCBbC§N}Sz\";",
                "\t\tconst object = [arrayElement]",
                "\t\tconst iteratee = \"./map.js\";",
                "\t\tconst accumulator = undefined;",
                "\t\tconst transformReturnValue = await transform(object, iteratee, accumulator)",
                "\t\tconst localConstructor = false;",
                "\t\tconst object1 = {",
                "\t\t\t\"constructor\": localConstructor",
                "\t\t}",
                "\t\tconst iteratee1 = {}",
                "\t\tconst accumulator1 = {}",
                "\t\tconst anon = () => {};",
                "\t\tconst anon1 = 202.7760134496002;",
                "\t\tconst transformReturnValue1 = await transform(object1, iteratee1, accumulator1, anon, anon1)",
                "\t\tconst iteratee2 = {}",
                "\t\tconst iteratee3 = () => {};",
                "\t\tconst accumulator2 = {}",
                "\t\tconst transformReturnValue2 = await transform(iteratee2, iteratee3, accumulator2)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    },
    "crash10": {
        "crashProject": "lodash",
        "trace": "    at iteratee (lodash/transform.js:55:60)\n    at arrayEach (lodash/.internal/arrayEach.js:14:9)\n    at transform (lodash/transform.js:54:264)\n    at call (.syntest/tests/tempTest.spec.js:18:60)\n    at tryCatch (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator._invoke (.syntest/tests/tempTest.spec.js:2:1)\n    at Generator.next (.syntest/tests/tempTest.spec.js:2:1)\n    at asyncGeneratorStep (.syntest/tests/tempTest.spec.js:2:1)\n    at _next (.syntest/tests/tempTest.spec.js:2:1)\n",
        "errors": [
            "TypeError: iteratee is not a function"
        ],
        "tests": [
            [
                "// Imports",
                "require = require('esm')(module)",
                "import transform from \"../instrumented/lodash/transform.js\";",
                "",
                "describe('SynTest Test Suite', function() {",
                "\tit(\"Test 1\", async () => {",
                "\t\t// Test",
                "\t\tconst object = null;",
                "\t\tconst iteratee = () => {};",
                "\t\tconst accumulator = undefined;",
                "\t\tconst transformReturnValue = await transform(object, iteratee, accumulator)",
                "\t\tconst accumulator1 = undefined;",
                "\t\tconst iteratee1 = () => {};",
                "\t\tconst arrayElement = {}",
                "\t\tconst object1 = [accumulator1, iteratee1, arrayElement]",
                "\t\tconst accumulator2 = undefined;",
                "\t\tconst accumulator3 = {}",
                "\t\tconst anon = false;",
                "\t\tconst transformReturnValue1 = await transform(object1, accumulator2, accumulator3, anon)",
                "\t\tconst accumulator4 = {}",
                "\t\tconst iteratee2 = () => {};",
                "\t\tconst accumulator5 = {}",
                "\t\tconst transformReturnValue2 = await transform(accumulator4, iteratee2, accumulator5)",
                "\t\t",
                "\t})",
                "})",
                ""
            ]
        ]
    }
}